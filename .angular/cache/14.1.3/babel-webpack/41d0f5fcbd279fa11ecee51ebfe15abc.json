{"ast":null,"code":"import _classCallCheck from \"/Users/georgina/Downloads/frontend/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/georgina/Downloads/frontend/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { empty } from 'rxjs/internal/observable/empty';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var MachineContextService = /*#__PURE__*/(function () {\n  var MachineContextService = /*#__PURE__*/function () {\n    function MachineContextService(http) {\n      _classCallCheck(this, MachineContextService);\n\n      this.http = http;\n      this.url = '/api/machine/contexts';\n      this.headers = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    _createClass(MachineContextService, [{\n      key: \"retrieveContexts\",\n      value: function retrieveContexts() {\n        return this.http.get(this.url);\n      }\n    }, {\n      key: \"retrieveContext\",\n      value: function retrieveContext(contextId) {\n        if (!contextId) {\n          return empty();\n        }\n\n        return this.http.get(this.url + '/' + contextId);\n      }\n    }, {\n      key: \"insertQuarter\",\n      value: function insertQuarter() {\n        var value = .25;\n        return this.http.put(this.url + '/' + value, null, this.headers);\n      }\n    }, {\n      key: \"requestRefund\",\n      value: function requestRefund(balance) {\n        var value = -balance;\n        return this.http.put(this.url + '/' + value, null, this.headers);\n      }\n    }, {\n      key: \"deleteContext\",\n      value: function deleteContext(contextId) {\n        if (!contextId) {\n          return empty();\n        }\n\n        return this.http.delete(this.url + '/' + contextId);\n      }\n    }]);\n\n    return MachineContextService;\n  }();\n\n  MachineContextService.ɵfac = function MachineContextService_Factory(t) {\n    return new (t || MachineContextService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MachineContextService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MachineContextService,\n    factory: MachineContextService.ɵfac,\n    providedIn: 'root'\n  });\n  return MachineContextService;\n})();","map":null,"metadata":{},"sourceType":"module"}