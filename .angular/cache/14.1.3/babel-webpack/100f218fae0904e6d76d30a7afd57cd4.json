{"ast":null,"code":"import _classCallCheck from \"/Users/georgina/Downloads/frontend/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/georgina/Downloads/frontend/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { empty } from 'rxjs/internal/observable/empty';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ItemService = /*#__PURE__*/(function () {\n  var ItemService = /*#__PURE__*/function () {\n    function ItemService(http) {\n      _classCallCheck(this, ItemService);\n\n      this.http = http;\n      this.url = 'http://localhost:8080/vending';\n      this.headers = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    _createClass(ItemService, [{\n      key: \"retrieveItems\",\n      value: function retrieveItems() {\n        return this.http.get(this.url + '/items');\n      }\n    }, {\n      key: \"retrieveDenoms\",\n      value: function retrieveDenoms() {\n        return this.http.get(this.url + '/currency/denominator');\n      }\n    }, {\n      key: \"retrieveItem\",\n      value: function retrieveItem(itemId) {\n        if (!itemId) {\n          return empty();\n        }\n\n        return this.http.get(this.url + '/' + itemId);\n      }\n    }, {\n      key: \"insertItems\",\n      value: function insertItems(items) {\n        if (!items) {\n          return empty();\n        }\n\n        var itemsStr = JSON.stringify(items);\n        return this.http.post(this.url, itemsStr, this.headers);\n      }\n    }, {\n      key: \"purchaseItem\",\n      value: function purchaseItem(items) {\n        if (!items) {\n          return empty();\n        }\n\n        var itemsStr = JSON.stringify(items);\n        return this.http.post(this.url + '/purchase', itemsStr, this.headers);\n      }\n    }, {\n      key: \"deleteItem\",\n      value: function deleteItem(itemId) {\n        if (!itemId) {\n          return empty();\n        }\n\n        return this.http.delete(this.url + '/' + itemId);\n      }\n    }]);\n\n    return ItemService;\n  }();\n\n  ItemService.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n  return ItemService;\n})();","map":null,"metadata":{},"sourceType":"module"}